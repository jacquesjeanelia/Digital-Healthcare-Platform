"use strict";(()=>{var e={};e.id=228,e.ids=[228],e.modules={9344:e=>{e.exports=require("jsonwebtoken")},1185:e=>{e.exports=require("mongoose")},145:e=>{e.exports=require("next/dist/compiled/next-server/pages-api.runtime.prod.js")},2915:(e,r,o)=>{o.r(r),o.d(r,{config:()=>f,default:()=>c,routeModule:()=>g});var s={};o.r(s),o.d(s,{default:()=>handler});var n=o(1802),t=o(7153),a=o(6249),i=o(9344),l=o.n(i),u=o(4149),d=o(5977);async function handler(e,r){if("GET"!==e.method)return r.status(405).json({message:"Method not allowed"});try{let o=e.headers.authorization;if(!o||!o.startsWith("Bearer "))return console.log("Profile API: Missing or invalid Authorization header",{authHeader:o}),r.status(401).json({message:"Unauthorized - Missing or invalid token format"});let s=o.split(" ")[1];if(!process.env.JWT_SECRET)return console.error("Profile API: JWT_SECRET environment variable is not defined"),r.status(500).json({message:"Server configuration error - Missing JWT secret"});try{console.log("Profile API: Verifying token",{tokenPrefix:s.substring(0,10)+"..."});let e=l().verify(s,process.env.JWT_SECRET);console.log("Profile API: Token verified successfully",{userId:e.userId}),console.log("Profile API: Connecting to MongoDB"),await (0,u.Z)(),console.log("Profile API: MongoDB connection established"),console.log("Profile API: Finding user by ID",{userId:e.userId});let o=await d.T_.findById(e.userId).select("-password");if(!o)return console.log("Profile API: User not found",{userId:e.userId}),r.status(404).json({message:"User not found"});return console.log("Profile API: User found",{userId:o._id.toString(),role:o.role}),r.status(200).json({user:{id:o._id,name:o.name,email:o.email,role:o.role}})}catch(e){if(console.error("Profile API: JWT verification error",{error:e.message,name:e.name,stack:e.stack}),"JsonWebTokenError"===e.name)return r.status(401).json({message:"Invalid token - "+e.message});if("TokenExpiredError"===e.name)return r.status(401).json({message:"Expired token"});throw e}}catch(e){if(console.error("Profile API: Unexpected error",{error:e.message,name:e.name,stack:e.stack}),"JsonWebTokenError"===e.name)return r.status(401).json({message:"Invalid token"});if("MongooseError"===e.name||"MongoError"===e.name)return r.status(500).json({message:"Database error - "+e.message});return r.status(500).json({message:"Internal server error - "+e.message})}}let c=(0,a.l)(s,"default"),f=(0,a.l)(s,"config"),g=new n.PagesAPIRouteModule({definition:{kind:t.x.PAGES_API,page:"/api/user/profile",pathname:"/api/user/profile",bundlePath:"",filename:""},userland:s})}};var r=require("../../../webpack-api-runtime.js");r.C(e);var __webpack_exec__=e=>r(r.s=e),o=r.X(0,[222,149,977],()=>__webpack_exec__(2915));module.exports=o})();