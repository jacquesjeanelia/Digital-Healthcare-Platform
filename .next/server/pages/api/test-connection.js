"use strict";(()=>{var e={};e.id=210,e.ids=[210],e.modules={1185:e=>{e.exports=require("mongoose")},145:e=>{e.exports=require("next/dist/compiled/next-server/pages-api.runtime.prod.js")},1497:(e,o,t)=>{t.r(o),t.d(o,{config:()=>u,default:()=>c,routeModule:()=>d});var n={};t.r(n),t.d(n,{default:()=>handler});var r=t(1802),s=t(7153),a=t(6249),i=t(4149);async function handler(e,o){if("GET"!==e.method)return o.status(405).json({message:"Method not allowed"});try{return await (0,i.Z)(),o.status(200).json({message:"Successfully connected to MongoDB"})}catch(e){return console.error("MongoDB connection error:",e),o.status(500).json({message:"Failed to connect to MongoDB",error:e.message})}}let c=(0,a.l)(n,"default"),u=(0,a.l)(n,"config"),d=new r.PagesAPIRouteModule({definition:{kind:s.x.PAGES_API,page:"/api/test-connection",pathname:"/api/test-connection",bundlePath:"",filename:""},userland:n})}};var o=require("../../webpack-api-runtime.js");o.C(e);var __webpack_exec__=e=>o(o.s=e),t=o.X(0,[222,149],()=>__webpack_exec__(1497));module.exports=t})();