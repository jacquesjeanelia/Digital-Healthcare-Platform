"use strict";(()=>{var e={};e.id=10,e.ids=[10],e.modules={1185:e=>{e.exports=require("mongoose")},145:e=>{e.exports=require("next/dist/compiled/next-server/pages-api.runtime.prod.js")},4832:(e,t,a)=>{a.r(t),a.d(t,{config:()=>m,default:()=>u,routeModule:()=>c});var s={};a.r(s),a.d(s,{default:()=>handler});var i=a(1802),n=a(7153),r=a(6249),o=a(4149),l=a(5977),d=a(2793);async function handler(e,t){let a;if("GET"!==e.method)return t.status(405).json({message:"Method not allowed"});let{id:s}=e.query,{date:i}=e.query;if(!s||"string"!=typeof s)return t.status(400).json({message:"Invalid doctor ID"});if(i&&"string"==typeof i){if(isNaN((a=new Date(i)).getTime()))return t.status(400).json({message:"Invalid date format"})}else a=new Date;try{await (0,o.Z)();let e=await l.R5.findById(s);if(!e)return t.status(404).json({message:"Doctor not found"});let i=a.toLocaleDateString("en-US",{weekday:"long"}).toLowerCase(),n=e.toObject(),r=n.availability||[],u=r.find(e=>e.days.map(e=>e.toLowerCase()).includes(i));if(!u)return t.status(200).json({message:"Doctor is not available on this day",availableSlots:[]});let m=new Date(a);m.setHours(0,0,0,0);let c=new Date(a);c.setHours(23,59,59,999);let g=await d.Z.find({doctorId:s,dateTime:{$gte:m,$lte:c},status:{$nin:["cancelled","no-show"]}}).select("dateTime duration").lean(),f=u.startTime||"09:00",p=u.endTime||"17:00",w=function(e,t,a,s,i){let n=[],[r,o]=t.split(":").map(e=>parseInt(e,10)),[l,d]=a.split(":").map(e=>parseInt(e,10)),u=new Date(e);u.setHours(r,o,0,0);let m=new Date(e);m.setHours(l,d,0,0);let c=i.map(e=>{let t=new Date(e.dateTime),a=new Date(e.dateTime);return a.setMinutes(a.getMinutes()+e.duration),{start:t,end:a}});for(;u<m;){let e=new Date(u),t=new Date(u);t.setMinutes(t.getMinutes()+s);let a=!c.some(a=>e<a.end&&t>a.start),i=new Date,r=e<=i;a&&!r&&n.push({start:e.toISOString(),end:t.toISOString(),formattedTime:e.toLocaleTimeString("en-US",{hour:"2-digit",minute:"2-digit",hour12:!0})}),u.setMinutes(u.getMinutes()+s)}return n}(a,f,p,30,g);return t.status(200).json({date:a,day:i,workingHours:{start:f,end:p},availableSlots:w})}catch(e){return console.error("Error fetching doctor availability:",e),t.status(500).json({message:"Failed to fetch availability",error:e.message})}}let u=(0,r.l)(s,"default"),m=(0,r.l)(s,"config"),c=new i.PagesAPIRouteModule({definition:{kind:n.x.PAGES_API,page:"/api/doctors/availability/[id]",pathname:"/api/doctors/availability/[id]",bundlePath:"",filename:""},userland:s})}};var t=require("../../../../webpack-api-runtime.js");t.C(e);var __webpack_exec__=e=>t(t.s=e),a=t.X(0,[222,149,977,793],()=>__webpack_exec__(4832));module.exports=a})();